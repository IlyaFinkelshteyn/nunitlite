General notes for developers working on NUnitLite:

1. It may seem strange to find conditional code contained in
these projects based on the definition of NUNITLITE. This is
done to keep the code consistent with NUnit 3.0, which uses
the same codebase for both NUnit and NUnitLite.

2. NUnitLite's runner, being in the same assembly with the
framework, is able to access internal definitions, which
are not available to the NUnit runner. For example, the
NUnitLite runner uses all the filter types directly, while
NUnit's console runner must construct an XML representation
of the filters to pass to the framework.

